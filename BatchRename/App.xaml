<Application x:Class="BatchRename.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:BatchRename"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--#region ********** Simple CheckBox Style ************ -->
        <SolidColorBrush x:Key="CheckBox.OptionMark.Static.Fill" Color="#FF707070" />
        <SolidColorBrush x:Key="CheckBox.OptionMark.Pressed.Fill" Color="SkyBlue" />
        <SolidColorBrush x:Key="CheckBox.MouseOver.BorderBrush" Color="#3DA254" />
        <SolidColorBrush x:Key="CheckBox.Checked.Background" Color="SkyBlue" />
        <Style x:Key="SimpleCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="{TemplateBinding Background}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderThickness="2" BorderBrush="Gray" Margin="1,1,4,1" SnapsToDevicePixels="True">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1M10,1.5L4.7,9.5 4.5,9.5 0,5.5 1.3,4 4.3,6.5 8.3,0.5 10,1.7 M0,10z" Fill="White" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFF3F9FF"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.BorderBrush}"/>
                                <Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="2" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.Checked.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource CheckBox.MouseOver.BorderBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFE6E6E6"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.OptionMark.Static.Fill}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBox.OptionMark.Static.Fill}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FFD9ECFF"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource CheckBox.OptionMark.Pressed.Fill}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource CheckBox.OptionMark.Pressed.Fill}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion -->


        <!--#region  *********  RadioButton  *********-->

        <SolidColorBrush x:Key="RadioButton.Static.Ellipse.Stroke" Color="DimGray" />
        <SolidColorBrush x:Key="RadioButton.Checked.Ellipse.Stroke" Color="#0078d7" />
        <Style x:Key="WindowsTenRadioButtonLightStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Unchecked" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1" To="1" />
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1" To="1" />
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1" To="0" />
                                                <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1" To="0" />
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0" To="1" />
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0" To="0" />
                                            <DoubleAnimation Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid Height="16" Width="16" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Grid.CacheMode>
                                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                                    </Grid.CacheMode>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource RadioButton.Static.Ellipse.Stroke}" StrokeThickness="2"/>
                                    <Ellipse Fill="{StaticResource RadioButton.Checked.Ellipse.Stroke}" Height="8" Width="8" RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Grid>
                                <ContentPresenter Grid.Column="1" RecognizesAccessKey="True"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                  HorizontalAlignment="Left" VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource RadioButton.Checked.Ellipse.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->


        <!--#region  *********  Float Button  *********-->

        <Color x:Key="Common.F83.Color" A="255" R="131" G="131" B="131"/>
        <Color x:Key="FloatBtn.Static.Color" A="255" R="38" G="166" B="154"/>
        <Color x:Key="FloatBtn.MouseOver.Color" A="255" R="43" G="187" B="173"/>
        <Color x:Key="FloatBtn.Pressed.Color" A="200" R="43" G="187" B="173"/>
        <Color x:Key="FloatBtn.Disable.Color" A="200" R="131" G="131" B="131"/>
        <Color x:Key="FloatBtn.Disable.Background.Color"  A="255" R="244" G="244" B="244"/>
        <Color x:Key="FloatBtn.Disable.Border.Color" A="255" R="173" G="178" B="181"/>
        <SolidColorBrush x:Key="FloatBtn.Static.Foreground" Color="White"/>
        <SolidColorBrush x:Key="FloatBtn.Static.Background" Color="{StaticResource FloatBtn.Static.Color}"/>

        <Style x:Key="FloatBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Background" Value="{StaticResource FloatBtn.Static.Background}" />
            <Setter Property="Foreground" Value="{StaticResource FloatBtn.Static.Foreground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.MouseOver.Color}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" >
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.Pressed.Color}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="{StaticResource FloatBtn.Disable.Background.Color}" />
                                            <ColorAnimation Duration="0:0:0" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" To="{StaticResource Common.F83.Color}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
        
        
        <!--#region Listview -->
        <SolidColorBrush x:Key="ListView.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListView.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListView.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListView.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="PipeItem.MouseOver.Background" Color="#ABDADADA"/>
        <SolidColorBrush x:Key="PipeItem.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="PipeItem.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="PipeItem.Selected.Fill" Color="#4285F4"/>
        <SolidColorBrush x:Key="Pipe.Selected.Fill" Color="#4285F4"/>
        <Style x:Key="LightListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="6,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid x:Name="Bg" MinHeight="40">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PipeItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource PipeItem.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource PipeItem.SelectedInactive.Background}"/>
                                <Setter Property="Foreground" Value="{StaticResource PipeItem.Selected.Fill}" />
                                <Setter Property="TextBlock.Foreground" Value="{StaticResource PipeItem.Selected.Fill}" />
                                <Setter Property="TextElement.Foreground" Value="{StaticResource PipeItem.Selected.Fill}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PipeListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <Grid x:Name="Bg" MinHeight="40">
                                <Rectangle x:Name="SelectPipe" Visibility="Collapsed" Margin="0,6" Width="3" Fill="{StaticResource Pipe.Selected.Fill}" HorizontalAlignment="Left" />
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"
                                              TextElement.Foreground="{TemplateBinding Foreground}" Margin="12,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PipeItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource PipeItem.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bg" Value="{StaticResource PipeItem.SelectedInactive.Background}"/>
                                <Setter Property="Visibility" TargetName="SelectPipe" Value="Visible" />
                                <Setter Property="Foreground" Value="{StaticResource PipeItem.Selected.Fill}" />
                                <Setter Property="TextBlock.Foreground" Value="{StaticResource PipeItem.Selected.Fill}" />
                                <Setter Property="TextElement.Foreground" Value="{StaticResource PipeItem.Selected.Fill}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LightListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListView.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListView.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource LightListViewItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true" Padding="{TemplateBinding Padding}">
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" Focusable="false">
                                <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListView.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListView.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PipeLightListViewStyle" BasedOn="{StaticResource LightListViewStyle}" TargetType="{x:Type ListView}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource PipeListViewItemStyle}"/>
        </Style>
        
        <!--#endregion-->


        <!--#region ScrollViewer style-->

        <SolidColorBrush x:Key="Common.F5.Brush" Color="#f5f5f5"/>
        <!--#region RepeatButton-->

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <!--<Setter Property="Opacity" Value="0"/>-->
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <!--#region ScrollBarButton-->

        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#E4E4E4"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DCDCDC"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{StaticResource ScrollBar.Static.Glyph}" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>-->
                                <Setter Property="Foreground" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->

        <sys:Double x:Key="ScrollBar.Compact.Length">3</sys:Double>
        <Color x:Key="Thumb.Compact.Color" A="255" R="140" G="140" B="140"/>
        <Color x:Key="Thumb.MouseOver.Color" A="255" R="140" G="140" B="140"/>
        <Color x:Key="Thumb.Static.Color" A="255" R="186" G="186" B="186"/>
        <SolidColorBrush x:Key="Thumb.Static.Background" Color="{StaticResource Thumb.Static.Color}"/>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Background" Value="{StaticResource Thumb.Static.Background}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" 
                                       Fill="{TemplateBinding Background}" 
                                       SnapsToDevicePixels="True" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{StaticResource Thumb.MouseOver.Color}" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{StaticResource Thumb.Static.Color}" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{StaticResource Thumb.MouseOver.Color}" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CompactableScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0,0"/>
            <Setter Property="Background" Value="{StaticResource Common.F5.Brush}" />
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid SnapsToDevicePixels="true" Background="Transparent">
                            <Grid.Resources>
                                <Visibility x:Key="Visibility.Visible">Visible</Visibility>
                                <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>
                                <Storyboard x:Key="toNormal">
                                    <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="2,0"  Duration="00:00:00"/>
                                    <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Width"
                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                                </Storyboard>
                                <Storyboard x:Key="toCompact" BeginTime="00:00:03">
                                    <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="2,0" Duration="00:00:00"/>
                                    <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Width"
                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00.20"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                                </Storyboard>
                                <Storyboard x:Key="delayMouseOver" BeginTime="00:00:00.10">
                                    <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>
                                    <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Width" Duration="00:00:00.10"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton" Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bg" Duration="00:00:00.10"/>
                                </Storyboard>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="MouseOver" To="Normal" Storyboard="{StaticResource toCompact}"/>
                                        <VisualTransition From="Normal" To="MouseOver" Storyboard="{StaticResource delayMouseOver}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" Storyboard="{StaticResource toNormal}"/>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="bar" Width="{TemplateBinding Width}" HorizontalAlignment="Right">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <RowDefinition Height="0.00001*"/>
                                    <RowDefinition MaxHeight="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                <RepeatButton x:Name="PART_LineUpButton"
                                                  Command="{x:Static ScrollBar.LineUpCommand}" 
                                                  IsEnabled="{TemplateBinding IsMouseOver}" 
                                                  Style="{StaticResource ScrollBarLineButtonStyle}">
                                    <Path Data="M0,3 L0,3 3,0 6,3" Stroke="Black" />
                                </RepeatButton>
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" 
                                                          Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                          Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                                <!--<Border x:Name="PART_LineDownButton"></Border>-->
                                <RepeatButton x:Name="PART_LineDownButton" 
                                                  Command="{x:Static ScrollBar.LineDownCommand}" 
                                                  IsEnabled="{TemplateBinding IsMouseOver}" 
                                                  Grid.Row="2" Style="{StaticResource ScrollBarLineButtonStyle}">
                                    <Path Data="M0,0 L0,0 3,3 6,0" Stroke="Black" />
                                </RepeatButton>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="0" />
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid SnapsToDevicePixels="true" Background="Transparent">
                                    <Grid.Resources>
                                        <Visibility x:Key="Visibility.Visible">Visible</Visibility>
                                        <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>
                                        <Storyboard x:Key="toNormal">
                                            <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="0,2" Duration="00:00:00"/>
                                            <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Height"
                                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineLeftButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineRightButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                                        </Storyboard>
                                        <Storyboard x:Key="toCompact" BeginTime="00:00:03">
                                            <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" To="0,2" Duration="00:00:00"/>
                                            <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Height"
                                                                 To="{StaticResource ScrollBar.Compact.Length}" Duration="00:00:00.20"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineLeftButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineRightButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" To="Transparent" Duration="00:00:00" />
                                        </Storyboard>
                                        <Storyboard x:Key="delayMouseOver" BeginTime="00:00:00.10">
                                            <ThicknessAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Margin" Duration="00:00:00"/>
                                            <DoubleAnimation Storyboard.TargetName="bar" Storyboard.TargetProperty="Height" Duration="00:00:00.10"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineLeftButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_LineRightButton"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00.10" Value="{StaticResource Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Bg" Duration="00:00:00.10"/>
                                        </Storyboard>
                                    </Grid.Resources>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition From="MouseOver" To="Normal" Storyboard="{StaticResource toCompact}"/>
                                                <VisualTransition From="Normal" To="MouseOver" Storyboard="{StaticResource delayMouseOver}"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal" Storyboard="{StaticResource toNormal}"/>
                                            <VisualState x:Name="MouseOver" />
                                            <VisualState x:Name="Disabled" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="bar" VerticalAlignment="Bottom" Height="{TemplateBinding Height}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="Bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                        <RepeatButton x:Name="PART_LineLeftButton" 
                                                          Command="{x:Static ScrollBar.LineLeftCommand}" 
                                                          IsEnabled="{TemplateBinding IsMouseOver}" 
                                                          Style="{StaticResource ScrollBarLineButtonStyle}">
                                            <Path Data="M3,0 L3,0 0,3 3,6" Stroke="Black" />
                                        </RepeatButton>
                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton x:Name="DecreaseBtn" Command="{x:Static ScrollBar.PageLeftCommand}" 
                                                                  Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton x:Name="IncreaseBtn" Command="{x:Static ScrollBar.PageRightCommand}" 
                                                                  Style="{StaticResource ScrollBarPageButtonStyle}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="PART_LineRightButton" 
                                                          Command="{x:Static ScrollBar.LineRightCommand}" 
                                                          IsEnabled="{TemplateBinding IsMouseOver}" 
                                                          Grid.Column="2" 
                                                          Style="{StaticResource ScrollBarLineButtonStyle}">
                                            <Path Data="M0,0 L0,0 3,3 0,6" Stroke="Black" />
                                        </RepeatButton>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BarCompactableScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="local:ScrollViewerAttach.HorizontalBarLength" Value="10" />
            <Setter Property="local:ScrollViewerAttach.VerticalBarLength" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border Margin="{TemplateBinding Margin}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <Grid x:Name="Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Grid.Column="0" Grid.Row="0"
                                                Grid.ColumnSpan="2" Grid.RowSpan="2"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                CanHorizontallyScroll="False" 
                                                CanVerticallyScroll="False" Margin="{TemplateBinding Padding}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1" Grid.RowSpan="2"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   BorderThickness="0" Cursor="Arrow"
                                   HorizontalAlignment="Right"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Width="{TemplateBinding local:ScrollViewerAttach.VerticalBarLength}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Style="{StaticResource CompactableScrollBarStyle}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Row="1" Grid.ColumnSpan="2"
                                   Orientation="Horizontal"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   BorderThickness="0" Cursor="Arrow"
                                   Height="{TemplateBinding local:ScrollViewerAttach.HorizontalBarLength}"
                                   VerticalAlignment="Bottom"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Style="{StaticResource CompactableScrollBarStyle}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
                                    <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                                    <Condition Property="IsMouseOver" SourceName="PART_HorizontalScrollBar" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Grid.RowSpan" TargetName="PART_VerticalScrollBar" Value="1" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
                                    <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                                    <Condition Property="IsMouseOver" SourceName="PART_VerticalScrollBar" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Grid.ColumnSpan" TargetName="PART_HorizontalScrollBar" Value="1" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="HideVerticalScrollBar">
                                        <Storyboard Storyboard.TargetName="PART_VerticalScrollBar">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:03">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="HideVerticalScrollBar"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="HideHorizontalScrollBar">
                                        <Storyboard Storyboard.TargetName="PART_HorizontalScrollBar">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:03">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="HideHorizontalScrollBar"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--#endregion-->

        <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource BarCompactableScrollViewerStyle}">
            
        </Style>
    </Application.Resources>
</Application>
